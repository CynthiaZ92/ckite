ckite {
	
	cluster {
		# max time to wait for a Leader to be elected in the absence of it
		waitForLeaderTimeout = 10 s 
		
		# cluster members bindings
		membersBindings = []
		
		# true if cluster members bindings are seeds to dynamically discover the cluster. false if not. 
		dynamicBootstrap = false
	}

	heartbeats {
	    # time between heartbeats pulses sent by the Leader
		period = 250 ms

		# workers used to send heartbeats		 
		workers = 10
	}

	replication {
		# timeout for Leaders to commit a LogEntry to a majority of members
		timeout =  3 s
		
		#workers involved in LogEntries replication
		workers = 10   
	}

	election {
		# minimum timeout without messages received from the Leader for Followers to become Candidates and start an election
		minTimeout = 1000 ms
		
		# maximum timeout without messages received from the Leader for Followers to become Candidates and start an election
		maxTimeout = 1200 ms
		
		# timeout for Candidates to collect a majority of votes
		votingTimeout =  1 s 
		
		# workers involved in collecting votes
		workers = 10 
	}

	log {
	
		compaction  {
			# policy to compact the Log.
			# fixedLogSize compacts the Log when more than N LogEntries are appended 
			fixedLogSize = 10
			
		}
		
	}

	data {
		# location of directory where ckite stores its persistence data
		dir = "/tmp"
	}

}

